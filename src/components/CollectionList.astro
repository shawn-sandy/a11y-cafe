---
import { getCollection } from "astro:content";
import type { SortType } from "#utils/types";
import BlogPosts from "./astro/BlogPosts.astro";
import { PAGINATION_COUNT } from "#utils/site-config";
import type { TODO } from "#utils/types";
import Placeholder from "#components/views/Placeholder.astro";
import Pagination from "#components/astro/Pagination.astro";
import Img from "#components/astro/Img.astro";

/**
 * The props for the CollectionList component.
 * @typedef {Object} Props
 * @property {string} [contentTitle] - The title to display for the collection.
 * @property {number} [pageSize] - The number of items per page.
 * @property {string} [to] - The link for the "View All" button.
 * @property {any} [collection] - The collection to display.
 */
export type Props = {
  collectionTitle?: string;
  pageSize?: number;
  to?: string;
  collection?: TODO;
  startCount?: number;
  category?: string;
  itemsPerPage?: number;
  showPagination?: boolean;
};

const {
  collectionTitle,
  pageSize,
  to,
  collection,
  startCount,
  itemsPerPage,
  showPagination,
} = Astro.props;
const category = Astro.props.category || undefined;
const collectionResults = (await getCollection(collection || "posts"))
  .filter(({ data: data }) => {
    return category
      ? data.draft === false && data.category === category
      : data.draft === false;
  })
  .sort(
    (a: SortType, b: SortType) =>
      b.data.pubDate.getTime() - a.data.pubDate.getTime()
  )
  .slice(startCount || 0, pageSize || PAGINATION_COUNT || 3);
---

<>
  <>
    {
      collectionResults.length === 0 ? (
        <>
          <Placeholder />
        </>
      ) : (
        <>
          <>
            <>
              {collectionTitle && <h3 data-ui="display">{collectionTitle}</h3>}
              {collectionResults?.map((post: TODO) => (
                <>
                  <article>
                    {post.data.image && post.data?.image && (
                      <Img
                        imgSrc={post.data.image.url}
                        imgAlt={post.data.image?.alt}
                        imgCaption={post.data.image?.caption}
                      />
                    )}
                    <BlogPosts
                      title={post.data.title}
                      description={post.data?.summary || post.data.description}
                      url={`/${to || "posts"}/${post.slug}`}
                    />
                  </article>
                </>
              ))}
            </>
          </>
          {showPagination && (
            <>
              <p>
                <hr />
                <Pagination
                  collection={collection}
                  itemsPerPage={itemsPerPage || PAGINATION_COUNT}
                />
              </p>
            </>
          )}
        </>
      )
    }
  </>
</>
